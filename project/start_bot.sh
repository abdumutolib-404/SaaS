#!/bin/bash

# ===============================================
# ü§ñ TELEGRAM AI CHATBOT - ISHGA TUSHIRISH
# ===============================================

echo "ü§ñ Telegram AI Chatbot - Ishga tushirish..."

# Rangarang chiqish uchun
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Logo chiqarish
echo -e "${CYAN}"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó"
echo "‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë"
echo "   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë"
echo "   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë"
echo "   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë"
echo "   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù"
echo -e "${NC}"
echo -e "${PURPLE}                    ü§ñ AI CHATBOT V2.0 ü§ñ${NC}"
echo ""

# Xususiyatlar
echo -e "${YELLOW}üåü Xususiyatlar:${NC}"
echo -e "${GREEN}‚úÖ 50+ AI Models (FREE/PRO)${NC}"
echo -e "${GREEN}‚úÖ Coqui TTS (Lokal, Yuqori Sifat)${NC}"
echo -e "${GREEN}‚úÖ Vosk STT (Offline, Multilingual)${NC}"
echo -e "${GREEN}‚úÖ Rasm Generatsiyasi${NC}"
echo -e "${GREEN}‚úÖ Smart Chat Sessions${NC}"
echo -e "${GREEN}‚úÖ Referral System${NC}"
echo -e "${GREEN}‚úÖ Admin Panel${NC}"
echo ""

# Foydalanish rejalari
echo -e "${CYAN}üíé Foydalanish Rejalari:${NC}"
echo -e "${GREEN}üÜì BEPUL:     3K/kun,  20K/oy   - \$0/oy${NC}"
echo -e "${BLUE}üíé PRO:       15K/kun, 100K/oy  - \$9.90/oy${NC}"
echo -e "${PURPLE}üåü PREMIUM:   50K/kun, 300K/oy  - \$19.90/oy${NC}"
echo -e "${YELLOW}üè¢ ENTERPRISE: 200K/kun, 1M/oy  - \$49.90/oy${NC}"
echo ""

# Systemni tekshirish
echo -e "${YELLOW}üîç Systemni tekshirish...${NC}"

# Node.js versiyasi
NODE_VERSION=$(node --version 2>/dev/null || echo "mavjud emas")
echo -e "${GREEN}üì¶ Node.js: $NODE_VERSION${NC}"

# Python versiyasi
PYTHON_VERSION=$(python3 --version 2>/dev/null || echo "mavjud emas")
echo -e "${GREEN}üêç Python: $PYTHON_VERSION${NC}"

# Dependencies tekshirish
echo -e "${YELLOW}üìö Dependencies tekshirish...${NC}"

# NPM packages
if [ -f "package.json" ]; then
    echo -e "${GREEN}‚úÖ Node.js dependencies mavjud${NC}"
else
    echo -e "${RED}‚ùå package.json topilmadi${NC}"
    exit 1
fi

# Python TTS/STT packages
echo -e "${YELLOW}üîç Python packages tekshirish...${NC}"
python3 -c "import TTS; print('‚úÖ Coqui TTS')" 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Coqui TTS o'rnatilmagan (eSpeak fallback ishlatiladi)${NC}"
python3 -c "import vosk; print('‚úÖ Vosk STT')" 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Vosk STT o'rnatilmagan (simple fallback ishlatiladi)${NC}"

# System binaries
which espeak >/dev/null 2>&1 && echo -e "${GREEN}‚úÖ eSpeak mavjud${NC}" || echo -e "${RED}‚ùå eSpeak o'rnatilmagan${NC}"
which ffmpeg >/dev/null 2>&1 && echo -e "${GREEN}‚úÖ FFmpeg mavjud${NC}" || echo -e "${RED}‚ùå FFmpeg o'rnatilmagan${NC}"
which sox >/dev/null 2>&1 && echo -e "${GREEN}‚úÖ SoX mavjud${NC}" || echo -e "${RED}‚ùå SoX o'rnatilmagan${NC}"

# .env fayli tekshirish
echo -e "${YELLOW}üîß Konfiguratsiya tekshirish...${NC}"
if [ -f ".env" ]; then
    echo -e "${GREEN}‚úÖ .env fayli mavjud${NC}"
    
    # BOT_TOKEN tekshirish
    if grep -q "BOT_TOKEN=your_telegram_bot_token_here" .env; then
        echo -e "${RED}‚ùå BOT_TOKEN sozlanmagan${NC}"
        echo -e "${YELLOW}   üîß .env faylida BOT_TOKEN ni o'zgartiring${NC}"
    else
        echo -e "${GREEN}‚úÖ BOT_TOKEN sozlangan${NC}"
    fi
    
    # ADMIN_IDS tekshirish
    if grep -q "ADMIN_IDS=123456789,987654321" .env; then
        echo -e "${RED}‚ùå ADMIN_IDS sozlanmagan${NC}"
        echo -e "${YELLOW}   üîß .env faylida ADMIN_IDS ni o'zgartiring${NC}"
    else
        echo -e "${GREEN}‚úÖ ADMIN_IDS sozlangan${NC}"
    fi
    
    # AI API kalitlari tekshirish
    echo -e "${YELLOW}ü§ñ AI API kalitlari:${NC}"
    grep -q "GROQ_API_KEY=your_groq_api_key_here" .env || echo -e "${GREEN}‚úÖ GROQ API${NC}"
    grep -q "TOGETHER_API_KEY=your_together_api_key_here" .env || echo -e "${GREEN}‚úÖ TOGETHER API${NC}"
    grep -q "HUGGINGFACE_API_KEY=hf_your_hf_key_here" .env || echo -e "${GREEN}‚úÖ HUGGINGFACE API${NC}"
    grep -q "OPENROUTER_API_KEY=your_openrouter_api_key_here" .env || echo -e "${GREEN}‚úÖ OPENROUTER API${NC}"
    
else
    echo -e "${RED}‚ùå .env fayli topilmadi${NC}"
    exit 1
fi

# Database tekshirish
echo -e "${YELLOW}üóÑÔ∏è  Database tekshirish...${NC}"
if [ -f "bot.db" ]; then
    echo -e "${GREEN}‚úÖ Database mavjud${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Database yangi yaratiladi${NC}"
fi

# TypeScript build
echo -e "${YELLOW}üî® TypeScript build...${NC}"
npm run build
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Build muvaffaqiyatli${NC}"
else
    echo -e "${RED}‚ùå Build xatolik${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üöÄ Bot ishga tushirilmoqda...${NC}"
echo -e "${YELLOW}üìù Loglar: tail -f /var/log/supervisor/backend.*.log${NC}"
echo -e "${YELLOW}üîÑ Restart: sudo supervisorctl restart backend${NC}"
echo -e "${YELLOW}‚èπÔ∏è  Stop: sudo supervisorctl stop backend${NC}"
echo ""

# Botni ishga tushirish
exec node dist/index.js